<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="neko.convenient.nekoconvenientproduct8005.mapper.PointDictMapper">
    <select id="getHighestMaxPrice" resultType="neko.convenient.nekoconvenientproduct8005.entity.PointDict">
        select point_id, min_price, max_price, point from point_dict
        order by max_price desc
        limit 1
    </select>

    <insert id="newPointDict">
        insert into point_dict(min_price, max_price, point, create_time, update_time)
        values(#{minPrice}, #{maxPrice}, #{point}, #{createTime}, #{updateTime})
    </insert>

    <delete id="deleteHighestPricePointDict">
        delete from point_dict
        where point_id = (
            select point_id from (
                select point_id from point_dict
                order by max_price desc
                limit 1
            ) child_point_id
        )
    </delete>

    <update id="updateHighestPricePointDict">
        update point_dict
        set max_price = #{maxPrice}, point = #{point}, update_time = #{updateTime}
        where point_id = (
            select point_id from (
                select point_id from point_dict
                order by max_price desc
                limit 1
            ) child_point_id
        )
    </update>

    <select id="getPointByPrice" resultType="int">
        select point from point_dict
        where #{price} >= min_price and max_price > #{price}
    </select>
</mapper>
